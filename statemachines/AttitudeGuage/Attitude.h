//****************************************************************************
// Model: NineAxisMeasurement.qm
// File:  AttitudeGuage/Attitude.h
//
// This code has been generated by QM tool (see state-machine.com/qm).
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// This program is open source software: you can redistribute it and/or
// modify it under the terms of the GNU General Public License as published
// by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
// or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
// for more details.
//****************************************************************************
//${AttitudeGuage::AttitudeGuage::Attitude.h} ................................
#ifndef _AO_ATTITUDE_H
#define _AO_ATTITUDE_H

#ifdef __cplusplus
extern "C" {
#endif

typedef struct {
    float x = 0.0f;
    float y = 0.0f;
    float z = 0.0f;
} AttitudeDim;

typedef AttitudeDim Acceleration; /* XYZ rates in meters per sec-square */
typedef AttitudeDim Velocity; /* XYZ rates in meters per sec */
typedef AttitudeDim Position; /* XYZ in meters*/

typedef AttitudeDim AngularAcc;  /* XYZ acc in degrees per sec-square */
typedef AttitudeDim AngularRate; /* XYZ rate in degrees per sec */
typedef AttitudeDim AngularPos; /* XYZ angles in degrees */

typedef AttitudeDim MagneticField; /* XYZ gauss*/

typedef struct {
	float r = 0.0f;
    float x = 0.0f;
    float y = 0.0f;
    float z = 0.0f;
} Quaternion;

typedef Quaternion QAttitude;	/* Normalized rotation representing attitude */

typedef float Altitude;

typedef int16_t Temperature;

typedef AttitudeDim MagneticStrength;

struct SixAxisAttitude {
    AngularRate  angularRate;
    Acceleration linearAcc;
};

struct NineAxisAttitude {
    AngularRate  angularRate;
    Acceleration linearAcc;
    MagneticStrength magneticStrength;
};

#ifdef __cplusplus
}
#endif

#endif // _AO_ATTITUDE_H

